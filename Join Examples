# SQL query joining tables to find top 10 performing movie tites with their rating, language, genre, and total revenue of each title.
SELECT F.title,
       F.rating,
       L.name AS language,
       C.name AS Genre,
       SUM(P.amount) AS total_revenue
FROM film F
JOIN language L ON F.language_id=L.language_id
JOIN film_category FC ON F.film_id=FC.film_id
JOIN category C ON FC.category_id=C.category_id
JOIN inventory I ON F.film_id=I.film_id
JOIN rental R ON I.inventory_id=R.inventory_id
JOIN payment P ON R.rental_id=P.rental_id
GROUP BY F.title,
         F.rating,
         L.name,
         C.name
ORDER BY SUM(P.amount) DESC
LIMIT 10


# SQL query joining tables to show top 5 overall performing movie genres with total revenue generated, inventory count of each genre, and the average rental duration of each genre.
SELECT f.name AS movie_genre,
       SUM(A.amount) AS genre_revenue,
       COUNT(D.film_id) AS movie_count,
       ROUND(AVG(D.rental_duration),0) AS average_rental_duration
FROM payment A
JOIN rental B ON A.rental_id=B.rental_id
JOIN inventory C ON B.inventory_id=C.inventory_id
JOIN film D ON C.film_id=D.film_id
JOIN film_category E ON D.film_id=E.film_id
JOIN category F ON E.category_id=F.category_id
GROUP BY F.name
ORDER BY genre_revenue DESC
LIMIT 5


# SQL query joining tables to show the bottom 10 performing country markets with their generated total revenue.
SELECT E.country,
       COUNT(DISTINCT B.customer_id) AS number_of_customers,
       SUM(P.amount) AS total_payment
FROM payment P
JOIN customer B ON P.customer_id=B.customer_id
JOIN address C ON B.address_id=C.address_id
JOIN city D ON C.city_id=D.city_id
JOIN country E ON D.country_id=E.country_id
GROUP BY E.country
ORDER BY total_payment ASC
LIMIT 10

